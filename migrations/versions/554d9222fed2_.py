"""empty message

Revision ID: 554d9222fed2
Revises: 
Create Date: 2025-07-18 22:17:41.554722

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '554d9222fed2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cotisation_sociale',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('libelle', sa.String(length=100), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('taux_salarial', sa.Float(), nullable=False),
    sa.Column('taux_patronal', sa.Float(), nullable=False),
    sa.Column('base_calcul', sa.String(length=50), nullable=True),
    sa.Column('plafond_application', sa.Float(), nullable=True),
    sa.Column('minimum_cotisation', sa.Float(), nullable=True),
    sa.Column('maximum_cotisation', sa.Float(), nullable=True),
    sa.Column('obligatoire', sa.Boolean(), nullable=True),
    sa.Column('actif', sa.Boolean(), nullable=True),
    sa.Column('ordre_affichage', sa.Integer(), nullable=True),
    sa.Column('categorie', sa.String(length=50), nullable=True),
    sa.Column('date_creation', sa.DateTime(), nullable=True),
    sa.Column('date_modification', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('libelle')
    )
    op.create_table('offre_emploi',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('titre', sa.String(length=150), nullable=False),
    sa.Column('departement', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('requirements', sa.Text(), nullable=True),
    sa.Column('date_publication', sa.Date(), nullable=True),
    sa.Column('date_cloture', sa.Date(), nullable=True),
    sa.Column('date_suppression', sa.Date(), nullable=True),
    sa.Column('statut', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('nom')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nom')
    )
    op.create_table('type_conge',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('duree_max_jours', sa.Integer(), nullable=True),
    sa.Column('justificatif_requis', sa.Boolean(), nullable=True),
    sa.Column('deductible_conge_annuel', sa.Boolean(), nullable=True),
    sa.Column('couleur', sa.String(length=7), nullable=True),
    sa.Column('actif', sa.Boolean(), nullable=True),
    sa.Column('ordre_affichage', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nom')
    )
    op.create_table('type_element_paie',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('libelle', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('categorie', sa.String(length=50), nullable=False),
    sa.Column('type_element', sa.String(length=20), nullable=False),
    sa.Column('mode_calcul', sa.String(length=50), nullable=True),
    sa.Column('taux_defaut', sa.Float(), nullable=True),
    sa.Column('montant_defaut', sa.Float(), nullable=True),
    sa.Column('base_calcul_defaut', sa.String(length=50), nullable=True),
    sa.Column('imposable', sa.Boolean(), nullable=True),
    sa.Column('soumis_cotisations', sa.Boolean(), nullable=True),
    sa.Column('obligatoire', sa.Boolean(), nullable=True),
    sa.Column('actif', sa.Boolean(), nullable=True),
    sa.Column('ordre_affichage', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('candidat',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('telephone', sa.String(length=20), nullable=False),
    sa.Column('cv', sa.String(length=200), nullable=True),
    sa.Column('lettre_motivation', sa.String(length=200), nullable=True),
    sa.Column('date_soumission', sa.Date(), nullable=True),
    sa.Column('statut', sa.String(length=50), nullable=True),
    sa.Column('offre_emploi_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['offre_emploi_id'], ['offre_emploi.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role_permission',
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('permission_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], )
    )
    op.create_table('utilisateur',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom_utilisateur', sa.String(length=64), nullable=False),
    sa.Column('nom_complet', sa.String(length=128), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('mot_de_passe_hash', sa.String(length=256), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('actif', sa.Boolean(), nullable=True),
    sa.Column('reset_token', sa.String(length=100), nullable=True),
    sa.Column('reset_token_expires', sa.DateTime(), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=True),
    sa.Column('account_locked_until', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('nom_utilisateur')
    )
    op.create_table('employee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False),
    sa.Column('prenom', sa.String(length=100), nullable=True),
    sa.Column('nom_complet', sa.String(length=200), nullable=True),
    sa.Column('date_naissance', sa.Date(), nullable=True),
    sa.Column('lieu_naissance', sa.String(length=100), nullable=True),
    sa.Column('sexe', sa.String(length=10), nullable=True),
    sa.Column('nationalite', sa.String(length=50), nullable=True),
    sa.Column('situation_matrimoniale', sa.String(length=50), nullable=True),
    sa.Column('nombre_enfants', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('telephone', sa.String(length=20), nullable=True),
    sa.Column('telephone_urgence', sa.String(length=20), nullable=True),
    sa.Column('adresse', sa.Text(), nullable=True),
    sa.Column('ville', sa.String(length=50), nullable=True),
    sa.Column('poste', sa.String(length=100), nullable=True),
    sa.Column('departement', sa.String(length=100), nullable=True),
    sa.Column('manager_id', sa.Integer(), nullable=True),
    sa.Column('type_contrat', sa.String(length=50), nullable=True),
    sa.Column('date_embauche', sa.Date(), nullable=True),
    sa.Column('date_fin_contrat', sa.Date(), nullable=True),
    sa.Column('salaire_base', sa.Float(), nullable=True),
    sa.Column('statut', sa.String(length=50), nullable=True),
    sa.Column('numero_cni', sa.String(length=20), nullable=True),
    sa.Column('numero_cnps', sa.String(length=20), nullable=True),
    sa.Column('numero_crtv', sa.String(length=20), nullable=True),
    sa.Column('numero_compte_bancaire', sa.String(length=30), nullable=True),
    sa.Column('banque', sa.String(length=50), nullable=True),
    sa.Column('photo_profil', sa.String(length=200), nullable=True),
    sa.Column('cv_file', sa.String(length=200), nullable=True),
    sa.Column('contrat_file', sa.String(length=200), nullable=True),
    sa.Column('date_creation', sa.DateTime(), nullable=True),
    sa.Column('date_modification', sa.DateTime(), nullable=True),
    sa.Column('cree_par', sa.Integer(), nullable=True),
    sa.Column('modifie_par', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cree_par'], ['utilisateur.id'], ),
    sa.ForeignKeyConstraint(['manager_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['modifie_par'], ['utilisateur.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('entretien',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('titre', sa.String(length=150), nullable=False),
    sa.Column('datetime', sa.DateTime(), nullable=False),
    sa.Column('duree', sa.Integer(), nullable=True),
    sa.Column('participants', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('offre_emploi_id', sa.Integer(), nullable=False),
    sa.Column('candidat_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['candidat_id'], ['candidat.id'], ),
    sa.ForeignKeyConstraint(['offre_emploi_id'], ['offre_emploi.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parametre_presence',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('heure_arrivee_standard', sa.Time(), nullable=False),
    sa.Column('heure_depart_standard', sa.Time(), nullable=False),
    sa.Column('duree_pause_minutes', sa.Integer(), nullable=True),
    sa.Column('tolerance_retard_minutes', sa.Integer(), nullable=True),
    sa.Column('tolerance_depart_anticipe_minutes', sa.Integer(), nullable=True),
    sa.Column('heures_minimum_journee', sa.Float(), nullable=True),
    sa.Column('seuil_hs_quotidien', sa.Float(), nullable=True),
    sa.Column('seuil_hs_hebdomadaire', sa.Float(), nullable=True),
    sa.Column('notifier_retard', sa.Boolean(), nullable=True),
    sa.Column('notifier_absence', sa.Boolean(), nullable=True),
    sa.Column('notifier_depart_anticipe', sa.Boolean(), nullable=True),
    sa.Column('notifier_heures_supplementaires', sa.Boolean(), nullable=True),
    sa.Column('methodes_pointage', sa.String(length=200), nullable=True),
    sa.Column('validation_gps', sa.Boolean(), nullable=True),
    sa.Column('rayon_presence_metres', sa.Integer(), nullable=True),
    sa.Column('calcul_automatique', sa.Boolean(), nullable=True),
    sa.Column('generation_rapport_automatique', sa.Boolean(), nullable=True),
    sa.Column('date_creation', sa.DateTime(), nullable=True),
    sa.Column('date_modification', sa.DateTime(), nullable=True),
    sa.Column('modifie_par', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['modifie_par'], ['utilisateur.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parametres_paie',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('smic_horaire', sa.Float(), nullable=False),
    sa.Column('plafond_cnps', sa.Float(), nullable=False),
    sa.Column('taux_transport', sa.Float(), nullable=True),
    sa.Column('auto_calcule', sa.Boolean(), nullable=True),
    sa.Column('jour_paiement', sa.Integer(), nullable=True),
    sa.Column('heures_hebdo', sa.Integer(), nullable=True),
    sa.Column('hs_25', sa.Integer(), nullable=True),
    sa.Column('hs_50', sa.Integer(), nullable=True),
    sa.Column('taux_impot_liberatoire', sa.Float(), nullable=True),
    sa.Column('abattement_professionnel', sa.Float(), nullable=True),
    sa.Column('taux_conge_paye', sa.Float(), nullable=True),
    sa.Column('date_creation', sa.DateTime(), nullable=True),
    sa.Column('date_modification', sa.DateTime(), nullable=True),
    sa.Column('modifie_par', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['modifie_par'], ['utilisateur.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('template_evaluation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type_evaluation', sa.String(length=50), nullable=False),
    sa.Column('score_max', sa.Float(), nullable=True),
    sa.Column('sections_json', sa.Text(), nullable=True),
    sa.Column('criteres_json', sa.Text(), nullable=True),
    sa.Column('actif', sa.Boolean(), nullable=True),
    sa.Column('par_defaut', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('date_creation', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['utilisateur.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('absence',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employe_id', sa.Integer(), nullable=True),
    sa.Column('date_absence', sa.Date(), nullable=False),
    sa.Column('motif', sa.String(length=100), nullable=False),
    sa.Column('justificatif', sa.String(length=200), nullable=True),
    sa.Column('etat', sa.String(length=50), nullable=True),
    sa.Column('impact_paie', sa.Boolean(), nullable=True),
    sa.Column('date_enregistrement', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['employe_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('avance_salaire',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employe_id', sa.Integer(), nullable=False),
    sa.Column('montant_demande', sa.Float(), nullable=False),
    sa.Column('montant_accorde', sa.Float(), nullable=False),
    sa.Column('motif', sa.Text(), nullable=True),
    sa.Column('date_demande', sa.Date(), nullable=False),
    sa.Column('date_accord', sa.Date(), nullable=True),
    sa.Column('date_versement', sa.Date(), nullable=True),
    sa.Column('nb_mensualites', sa.Integer(), nullable=True),
    sa.Column('montant_mensualite', sa.Float(), nullable=True),
    sa.Column('montant_rembourse', sa.Float(), nullable=True),
    sa.Column('solde_restant', sa.Float(), nullable=True),
    sa.Column('statut', sa.String(length=20), nullable=True),
    sa.Column('demandeur_id', sa.Integer(), nullable=True),
    sa.Column('approbateur_id', sa.Integer(), nullable=True),
    sa.Column('commentaire_approbation', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['approbateur_id'], ['utilisateur.id'], ),
    sa.ForeignKeyConstraint(['demandeur_id'], ['utilisateur.id'], ),
    sa.ForeignKeyConstraint(['employe_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bulletin_paie',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employe_id', sa.Integer(), nullable=False),
    sa.Column('periode_debut', sa.Date(), nullable=False),
    sa.Column('periode_fin', sa.Date(), nullable=False),
    sa.Column('mois', sa.Integer(), nullable=False),
    sa.Column('annee', sa.Integer(), nullable=False),
    sa.Column('numero_bulletin', sa.String(length=50), nullable=False),
    sa.Column('salaire_base', sa.Float(), nullable=False),
    sa.Column('nb_jours_travailles', sa.Float(), nullable=True),
    sa.Column('nb_jours_ouvres', sa.Integer(), nullable=True),
    sa.Column('nb_heures_normales', sa.Float(), nullable=True),
    sa.Column('nb_heures_supplementaires', sa.Float(), nullable=True),
    sa.Column('nb_jours_conges', sa.Float(), nullable=True),
    sa.Column('nb_jours_absences', sa.Float(), nullable=True),
    sa.Column('salaire_brut', sa.Float(), nullable=False),
    sa.Column('total_cotisations_salariales', sa.Float(), nullable=True),
    sa.Column('total_cotisations_patronales', sa.Float(), nullable=True),
    sa.Column('salaire_imposable', sa.Float(), nullable=True),
    sa.Column('impot_sur_salaire', sa.Float(), nullable=True),
    sa.Column('salaire_net', sa.Float(), nullable=False),
    sa.Column('primes_bonus', sa.Float(), nullable=True),
    sa.Column('indemnites', sa.Float(), nullable=True),
    sa.Column('avantages_nature', sa.Float(), nullable=True),
    sa.Column('retenues_diverses', sa.Float(), nullable=True),
    sa.Column('provision_conges_payes', sa.Float(), nullable=True),
    sa.Column('solde_conges_payes', sa.Float(), nullable=True),
    sa.Column('statut', sa.String(length=20), nullable=True),
    sa.Column('valide', sa.Boolean(), nullable=True),
    sa.Column('date_validation', sa.DateTime(), nullable=True),
    sa.Column('valide_par', sa.Integer(), nullable=True),
    sa.Column('date_paiement', sa.Date(), nullable=True),
    sa.Column('mode_paiement', sa.String(length=50), nullable=True),
    sa.Column('reference_paiement', sa.String(length=100), nullable=True),
    sa.Column('date_creation', sa.DateTime(), nullable=True),
    sa.Column('date_modification', sa.DateTime(), nullable=True),
    sa.Column('cree_par', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cree_par'], ['utilisateur.id'], ),
    sa.ForeignKeyConstraint(['employe_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['valide_par'], ['utilisateur.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('employe_id', 'mois', 'annee', name='unique_bulletin_employe_periode'),
    sa.UniqueConstraint('numero_bulletin')
    )
    with op.batch_alter_table('bulletin_paie', schema=None) as batch_op:
        batch_op.create_index('idx_bulletin_employe', ['employe_id'], unique=False)
        batch_op.create_index('idx_bulletin_periode', ['mois', 'annee'], unique=False)

    op.create_table('conge',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employe_id', sa.Integer(), nullable=False),
    sa.Column('type_conge', sa.String(length=50), nullable=False),
    sa.Column('date_debut', sa.Date(), nullable=False),
    sa.Column('date_fin', sa.Date(), nullable=False),
    sa.Column('nombre_jours', sa.Integer(), nullable=False),
    sa.Column('motif', sa.Text(), nullable=True),
    sa.Column('statut', sa.String(length=20), nullable=True),
    sa.Column('demandeur_id', sa.Integer(), nullable=True),
    sa.Column('approbateur_id', sa.Integer(), nullable=True),
    sa.Column('date_demande', sa.DateTime(), nullable=True),
    sa.Column('date_approbation', sa.DateTime(), nullable=True),
    sa.Column('commentaire_approbateur', sa.Text(), nullable=True),
    sa.Column('justificatif', sa.String(length=255), nullable=True),
    sa.Column('remplacant_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['approbateur_id'], ['utilisateur.id'], ),
    sa.ForeignKeyConstraint(['demandeur_id'], ['utilisateur.id'], ),
    sa.ForeignKeyConstraint(['employe_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['remplacant_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employee_document',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('nom_document', sa.String(length=100), nullable=False),
    sa.Column('type_document', sa.String(length=50), nullable=False),
    sa.Column('nom_fichier', sa.String(length=200), nullable=False),
    sa.Column('chemin_fichier', sa.String(length=200), nullable=False),
    sa.Column('taille_fichier', sa.Integer(), nullable=True),
    sa.Column('date_upload', sa.DateTime(), nullable=True),
    sa.Column('uploade_par', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['uploade_par'], ['utilisateur.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employee_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('champ_modifie', sa.String(length=100), nullable=True),
    sa.Column('ancienne_valeur', sa.Text(), nullable=True),
    sa.Column('nouvelle_valeur', sa.Text(), nullable=True),
    sa.Column('date_modification', sa.DateTime(), nullable=True),
    sa.Column('commentaire', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['utilisateur.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('evaluation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employe_id', sa.Integer(), nullable=False),
    sa.Column('evaluateur_id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=True),
    sa.Column('periode', sa.String(length=50), nullable=False),
    sa.Column('type_evaluation', sa.String(length=50), nullable=True),
    sa.Column('annee', sa.Integer(), nullable=False),
    sa.Column('score_global', sa.Float(), nullable=False),
    sa.Column('score_max', sa.Float(), nullable=True),
    sa.Column('note_finale', sa.String(length=20), nullable=True),
    sa.Column('objectifs_atteints', sa.Text(), nullable=True),
    sa.Column('objectifs_non_atteints', sa.Text(), nullable=True),
    sa.Column('objectifs_futurs', sa.Text(), nullable=True),
    sa.Column('plan_developpement', sa.Text(), nullable=True),
    sa.Column('formations_recommandees', sa.Text(), nullable=True),
    sa.Column('commentaire_evaluateur', sa.Text(), nullable=True),
    sa.Column('commentaire_employe', sa.Text(), nullable=True),
    sa.Column('commentaire_rh', sa.Text(), nullable=True),
    sa.Column('statut', sa.String(length=30), nullable=True),
    sa.Column('date_creation', sa.DateTime(), nullable=True),
    sa.Column('date_evaluation', sa.Date(), nullable=False),
    sa.Column('date_validation', sa.DateTime(), nullable=True),
    sa.Column('date_finalisation', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['utilisateur.id'], ),
    sa.ForeignKeyConstraint(['employe_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['evaluateur_id'], ['utilisateur.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['template_evaluation.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['utilisateur.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('heures_travail',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employe_id', sa.Integer(), nullable=False),
    sa.Column('date_travail', sa.Date(), nullable=False),
    sa.Column('heure_arrivee', sa.Time(), nullable=True),
    sa.Column('heure_depart', sa.Time(), nullable=True),
    sa.Column('duree_pause_minutes', sa.Integer(), nullable=True),
    sa.Column('heures_presentes', sa.Float(), nullable=True),
    sa.Column('heures_travaillees', sa.Float(), nullable=True),
    sa.Column('heures_normales', sa.Float(), nullable=True),
    sa.Column('heures_supplementaires', sa.Float(), nullable=True),
    sa.Column('retard_minutes', sa.Integer(), nullable=True),
    sa.Column('depart_anticipe_minutes', sa.Integer(), nullable=True),
    sa.Column('statut', sa.String(length=20), nullable=True),
    sa.Column('valide', sa.Boolean(), nullable=True),
    sa.Column('valide_par', sa.Integer(), nullable=True),
    sa.Column('date_validation', sa.DateTime(), nullable=True),
    sa.Column('commentaire_validation', sa.Text(), nullable=True),
    sa.Column('calcule_automatiquement', sa.Boolean(), nullable=True),
    sa.Column('date_creation', sa.DateTime(), nullable=True),
    sa.Column('date_modification', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['employe_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['valide_par'], ['utilisateur.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('employe_id', 'date_travail', name='unique_employe_date_travail')
    )
    with op.batch_alter_table('heures_travail', schema=None) as batch_op:
        batch_op.create_index('idx_heures_date_statut', ['date_travail', 'statut'], unique=False)
        batch_op.create_index('idx_heures_employe_date', ['employe_id', 'date_travail'], unique=False)

    op.create_table('notification_presence',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employe_id', sa.Integer(), nullable=False),
    sa.Column('type_notification', sa.String(length=50), nullable=False),
    sa.Column('titre', sa.String(length=100), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('priorite', sa.String(length=20), nullable=True),
    sa.Column('destinataire_employe', sa.Boolean(), nullable=True),
    sa.Column('destinataire_manager', sa.Boolean(), nullable=True),
    sa.Column('destinataire_rh', sa.Boolean(), nullable=True),
    sa.Column('statut', sa.String(length=20), nullable=True),
    sa.Column('date_envoi', sa.DateTime(), nullable=True),
    sa.Column('date_lecture', sa.DateTime(), nullable=True),
    sa.Column('date_reference', sa.Date(), nullable=False),
    sa.Column('donnees_reference', sa.JSON(), nullable=True),
    sa.Column('date_creation', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['employe_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notification_presence', schema=None) as batch_op:
        batch_op.create_index('idx_notif_employe_date', ['employe_id', 'date_reference'], unique=False)
        batch_op.create_index('idx_notif_type_statut', ['type_notification', 'statut'], unique=False)

    op.create_table('parametre_calcul_paie',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employe_id', sa.Integer(), nullable=False),
    sa.Column('salaire_base_mensuel', sa.Float(), nullable=True),
    sa.Column('taux_horaire', sa.Float(), nullable=True),
    sa.Column('coefficient_anciennete', sa.Float(), nullable=True),
    sa.Column('prime_anciennete', sa.Float(), nullable=True),
    sa.Column('prime_fonction', sa.Float(), nullable=True),
    sa.Column('prime_transport', sa.Float(), nullable=True),
    sa.Column('indemnite_logement', sa.Float(), nullable=True),
    sa.Column('avantage_voiture', sa.Float(), nullable=True),
    sa.Column('avantage_logement', sa.Float(), nullable=True),
    sa.Column('avantage_telephone', sa.Float(), nullable=True),
    sa.Column('nombre_parts', sa.Float(), nullable=True),
    sa.Column('exoneration_impot', sa.Boolean(), nullable=True),
    sa.Column('taux_impot_specifique', sa.Float(), nullable=True),
    sa.Column('exoneration_cnps', sa.Boolean(), nullable=True),
    sa.Column('cotisations_specifiques', sa.JSON(), nullable=True),
    sa.Column('date_effet', sa.Date(), nullable=True),
    sa.Column('date_fin', sa.Date(), nullable=True),
    sa.Column('actif', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['employe_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('parametre_calcul_paie', schema=None) as batch_op:
        batch_op.create_index('idx_parametre_paie_employe', ['employe_id'], unique=False)

    op.create_table('pointage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employe_id', sa.Integer(), nullable=False),
    sa.Column('date_pointage', sa.Date(), nullable=False),
    sa.Column('heure_pointage', sa.Time(), nullable=False),
    sa.Column('type_pointage', sa.String(length=20), nullable=False),
    sa.Column('methode', sa.String(length=50), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('adresse', sa.String(length=200), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=200), nullable=True),
    sa.Column('commentaire', sa.Text(), nullable=True),
    sa.Column('valide', sa.Boolean(), nullable=True),
    sa.Column('timestamp_creation', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['employe_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('pointage', schema=None) as batch_op:
        batch_op.create_index('idx_pointage_date_type', ['date_pointage', 'type_pointage'], unique=False)
        batch_op.create_index('idx_pointage_employe_date', ['employe_id', 'date_pointage'], unique=False)

    op.create_table('presence',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employe_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('heure_arrivee', sa.Time(), nullable=True),
    sa.Column('heure_depart', sa.Time(), nullable=True),
    sa.Column('retard_minutes', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['employe_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('solde_conge',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employe_id', sa.Integer(), nullable=False),
    sa.Column('annee', sa.Integer(), nullable=False),
    sa.Column('jours_alloues', sa.Integer(), nullable=True),
    sa.Column('jours_pris', sa.Integer(), nullable=True),
    sa.Column('jours_reports', sa.Integer(), nullable=True),
    sa.Column('jours_anticipes', sa.Integer(), nullable=True),
    sa.Column('date_maj', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['employe_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('employe_id', 'annee', name='unique_solde_employe_annee')
    )
    op.create_table('critere_evaluation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('evaluation_id', sa.Integer(), nullable=False),
    sa.Column('section', sa.String(length=100), nullable=False),
    sa.Column('critere', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('score_obtenu', sa.Float(), nullable=False),
    sa.Column('score_max', sa.Float(), nullable=False),
    sa.Column('poids', sa.Float(), nullable=True),
    sa.Column('commentaire', sa.Text(), nullable=True),
    sa.Column('recommandations', sa.Text(), nullable=True),
    sa.Column('ordre', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['evaluation_id'], ['evaluation.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('element_paie',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bulletin_id', sa.Integer(), nullable=False),
    sa.Column('libelle', sa.String(length=100), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=True),
    sa.Column('categorie', sa.String(length=50), nullable=False),
    sa.Column('type_element', sa.String(length=20), nullable=False),
    sa.Column('base_calcul', sa.Float(), nullable=True),
    sa.Column('taux', sa.Float(), nullable=True),
    sa.Column('quantite', sa.Float(), nullable=True),
    sa.Column('montant', sa.Float(), nullable=False),
    sa.Column('part_salariale', sa.Float(), nullable=True),
    sa.Column('part_patronale', sa.Float(), nullable=True),
    sa.Column('imposable', sa.Boolean(), nullable=True),
    sa.Column('soumis_cotisations', sa.Boolean(), nullable=True),
    sa.Column('ordre_affichage', sa.Integer(), nullable=True),
    sa.Column('commentaire', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['bulletin_id'], ['bulletin_paie.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('historique_conge',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('conge_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('ancien_statut', sa.String(length=20), nullable=True),
    sa.Column('nouveau_statut', sa.String(length=20), nullable=True),
    sa.Column('commentaire', sa.Text(), nullable=True),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True),
    sa.Column('date_action', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['conge_id'], ['conge.id'], ),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateur.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('historique_paie',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bulletin_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('ancien_statut', sa.String(length=20), nullable=True),
    sa.Column('nouveau_statut', sa.String(length=20), nullable=True),
    sa.Column('champs_modifies', sa.JSON(), nullable=True),
    sa.Column('anciennes_valeurs', sa.JSON(), nullable=True),
    sa.Column('nouvelles_valeurs', sa.JSON(), nullable=True),
    sa.Column('commentaire', sa.Text(), nullable=True),
    sa.Column('utilisateur_id', sa.Integer(), nullable=True),
    sa.Column('date_action', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['bulletin_id'], ['bulletin_paie.id'], ),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateur.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('objectif_employe',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employe_id', sa.Integer(), nullable=False),
    sa.Column('evaluation_id', sa.Integer(), nullable=True),
    sa.Column('titre', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type_objectif', sa.String(length=50), nullable=True),
    sa.Column('priorite', sa.String(length=20), nullable=True),
    sa.Column('date_debut', sa.Date(), nullable=False),
    sa.Column('date_fin', sa.Date(), nullable=False),
    sa.Column('date_realisation', sa.Date(), nullable=True),
    sa.Column('pourcentage_realisation', sa.Float(), nullable=True),
    sa.Column('statut', sa.String(length=30), nullable=True),
    sa.Column('resultat_obtenu', sa.Text(), nullable=True),
    sa.Column('commentaires', sa.Text(), nullable=True),
    sa.Column('indicateur_mesure', sa.String(length=200), nullable=True),
    sa.Column('valeur_cible', sa.String(length=100), nullable=True),
    sa.Column('valeur_atteinte', sa.String(length=100), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('date_creation', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['utilisateur.id'], ),
    sa.ForeignKeyConstraint(['employe_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['evaluation_id'], ['evaluation.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('remboursement_avance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('avance_id', sa.Integer(), nullable=False),
    sa.Column('bulletin_id', sa.Integer(), nullable=False),
    sa.Column('montant', sa.Float(), nullable=False),
    sa.Column('numero_echeance', sa.Integer(), nullable=False),
    sa.Column('date_remboursement', sa.Date(), nullable=False),
    sa.Column('commentaire', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['avance_id'], ['avance_salaire.id'], ),
    sa.ForeignKeyConstraint(['bulletin_id'], ['bulletin_paie.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('remboursement_avance')
    op.drop_table('objectif_employe')
    op.drop_table('historique_paie')
    op.drop_table('historique_conge')
    op.drop_table('element_paie')
    op.drop_table('critere_evaluation')
    op.drop_table('solde_conge')
    op.drop_table('presence')
    with op.batch_alter_table('pointage', schema=None) as batch_op:
        batch_op.drop_index('idx_pointage_employe_date')
        batch_op.drop_index('idx_pointage_date_type')

    op.drop_table('pointage')
    with op.batch_alter_table('parametre_calcul_paie', schema=None) as batch_op:
        batch_op.drop_index('idx_parametre_paie_employe')

    op.drop_table('parametre_calcul_paie')
    with op.batch_alter_table('notification_presence', schema=None) as batch_op:
        batch_op.drop_index('idx_notif_type_statut')
        batch_op.drop_index('idx_notif_employe_date')

    op.drop_table('notification_presence')
    with op.batch_alter_table('heures_travail', schema=None) as batch_op:
        batch_op.drop_index('idx_heures_employe_date')
        batch_op.drop_index('idx_heures_date_statut')

    op.drop_table('heures_travail')
    op.drop_table('evaluation')
    op.drop_table('employee_history')
    op.drop_table('employee_document')
    op.drop_table('conge')
    with op.batch_alter_table('bulletin_paie', schema=None) as batch_op:
        batch_op.drop_index('idx_bulletin_periode')
        batch_op.drop_index('idx_bulletin_employe')

    op.drop_table('bulletin_paie')
    op.drop_table('avance_salaire')
    op.drop_table('absence')
    op.drop_table('template_evaluation')
    op.drop_table('parametres_paie')
    op.drop_table('parametre_presence')
    op.drop_table('entretien')
    op.drop_table('employee')
    op.drop_table('utilisateur')
    op.drop_table('role_permission')
    op.drop_table('candidat')
    op.drop_table('type_element_paie')
    op.drop_table('type_conge')
    op.drop_table('role')
    op.drop_table('permission')
    op.drop_table('offre_emploi')
    op.drop_table('cotisation_sociale')
    # ### end Alembic commands ###
